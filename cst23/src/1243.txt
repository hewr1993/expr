#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
using namespace std;

#define MAXN 100010

char S[MAXN];
int a[MAXN<<1], p[MAXN<<1];
int L;

void Init ()
{
	scanf ("%s", S);
	L = strlen (S);
}

void Maracher ()
{
	for (int i = 0; i <= L+L; i++)
		if (i&1)
			a[i] = S[i>>1]-'a';
		else
			a[i] = -1;
	
	memset (p, 0, sizeof(p));
	p[0] = 1;
	int id = 0, mx = 1;
	for (int i = 1; i <= L+L; i++)
	{
		if (i < mx)
			p[i] = min (mx-i, p[id+id-i]);
		else
			p[i] = 1;
		while (i>=p[i] && i+p[i]<=L+L && a[i-p[i]]==a[i+p[i]])
			p[i]++;
		if (i+p[i] > mx)
		{
			id = i;
			mx = i+p[i];
		}
	}
}

int l[MAXN<<1], r[MAXN<<1];

void Solve ()
{
	int pos;
	pos = 0;
	for (int i = 0; i <= L+L; i++)
		while (pos < i+p[i])
		{
			r[pos] = ((pos-i)<<1)+1;
			pos++;
		}
	pos = L+L;
	for (int i = L+L; i >= 0; i--)
		while (pos > i-p[i])
		{
			l[pos] = ((i-pos)<<1)+1;
			pos--;
		}
	int ans = 0;
	for (int i = 0; i <= L+L; i+=2)
		ans = max (ans, l[i]+r[i]);
	printf("%d
", (ans-2)>>1);
}

int main ()
{
	Init ();
	Maracher ();
	Solve ();
/*	for (int i = 0; i <= L+L; i++)
		printf ("%d ", p[i]);
	printf ("
");
	for (int i = 1; i < L+L; i+=2)
		printf ("%d ", r[i]);
	printf ("
");
	for (int i = 1; i < L+L; i+=2)
		printf ("%d ", l[i]);
	printf ("
");*/
//	system ("pause");
	return 0;
}

