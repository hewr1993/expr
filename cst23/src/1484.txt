/*A1117. 火车过站
问题描述
　　火车从始发站（称为第1站）开出，在始发站上车的人数为a，然后到达第2站，在第2站有人上、下车，
	但上、下车的人数相同，因此在第2站开出时（即在到达第3站之前）车上的人数保持为a人。
	从第3站起（包括第3站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，
	而下车人数等于上一站上车人数，一直到终点站的前一站（第n-1站），都满足此规律。
	现给出的条件是：共有N个车站，始发站上车的人数为a，最后一站下车的人数是m（全部下车）。
	试问x站开出时车上的人数是多少？
输入格式
　　输入包含一行， 有四个正整数：a（a<=100），n（n<=20），m（m<=10000）和x（x<=19）
输出格式
　　输出为一个整数，为x站开出时车上的人数。*/

#include<iostream>
#include<cstdlib>
using namespace std;

struct chezhan
{
	int xa;
	int xk;
};

int main()
{
	chezhan f[21];
	int a,n,m,x,k,s;
	cin>>a>>n>>m>>x;
	f[1].xa=f[2].xa=1;
	f[3].xa=f[4].xa=2;
	f[1].xk=f[2].xk=f[3].xk=0;
	f[4].xk=1;
	for(int i=5;i<=19;i++)
	{
		f[i].xa=2*f[i-1].xa-f[i-3].xa;
		f[i].xk=2*f[i-1].xk-f[i-3].xk;
	}
	k=(m-a*f[n-1].xa)/f[n-1].xk;
	s=a*f[x].xa+k*f[x].xk;
	cout<<s<<endl;
	system("pause");
	return 0;
}
 



