#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdlib>

#define pb(x) push_back(x)
#define size(S) S.size()

using namespace std;

const int maxn=20010;
const unsigned INF=0xFFFFFFFF;
int n, m, p;
string ans;
unsigned int g[maxn/2][maxn/32+1];
int f[2][maxn], x[maxn], y[maxn];

inline int F(int a, int b){return (x[a]+y[b])%p;}

int main(){
	cin>>n>>m>>p;
	for (int i=0; i<n; i++) cin>>x[i];
	for (int i=0; i<m; i++) cin>>y[i];

	int now=0, pre=1, h=n/2;
	for (int i=0; i<n; i++){
		for (int j=0; j<m; j++){
			if (i+j==0) continue;
			int p=-1, q=-1;
			if (i>0) p=f[pre][j]+F(i-1, j);
			if (j>0) q=f[now][j-1]+F(i, j-1);
			if (p>q){
				f[now][j]=p;
				if (i>=h) g[i-h][j/32]&=INF-(1<<(j%32));
			}else{
				f[now][j]=q;
				if (i>=h) g[i-h][j/32]|=1<<(j%32);
			}
		}
		now^=1, pre^=1;
		memset(f[now], 255, sizeof(f[now]));
	}
	cout<<f[pre][m-1]+F(n-1, m-1)<<endl;

	int nx=n-1, ny=m-1;
	while (nx>=h && !(nx==0 && ny==0)){
		if ((g[nx-h][ny/32]&(1<<(ny%32))) && ny==0) break;
		if ((g[nx-h][ny/32]&(1<<(ny%32)))) ny--, ans+='S';
		else nx--, ans+='C';
	}

	now=0; pre=1;
	memset(f, 0, sizeof(f));
	memset(g, 0, sizeof(g));
	for (int i=0; i<h; i++){
		for (int j=0; j<m; j++){
			if (i+j==0) continue;
			int p=-1, q=-1;
			if (i>0) p=f[pre][j]+F(i-1, j);
			if (j>0) q=f[now][j-1]+F(i, j-1);
			if (p>q){
				f[now][j]=p;
				g[i][j/32]&=INF-(1<<(j%32));
			}else{
				f[now][j]=q;
				g[i][j/32]|=1<<(j%32);
			}
		}
		now^=1, pre^=1;
		memset(f[now], 255, sizeof(f[now]));
	}

	while (!(nx==0 && ny==0)){
		if ((g[nx][ny/32]&(1<<(ny%32)))) ny--, ans+='S';
		else nx--, ans+='C';
	}

	reverse(ans.begin(), ans.end());
	cout<<ans<<endl;
}

