
// 2011.1.9 building

#include <algorithm>
#include <cstring>
#include <cstdio>

using namespace std;

const long long ll_inf = 4000000000000000000LL;

long long up[63][100][100], cur[100], tmp[100];

int main()
  {
    int t, n, now, i, j, k;
    long long ans, m;
    
    for (scanf("%d", &t); t; t --)
      {
        scanf("%d%I64d", &n, &m);
        memset(up, 0, sizeof(up));
        for (i = 0; i < n; i ++)
          for (j = 0; j < n; j ++)
            {
              scanf("%I64d", &up[0][i][j]);
              if (up[0][i][j] == 0) up[0][i][j] = -ll_inf;
            }
        for (now = 1; ; now ++)
          {
            for (i = 0; i < n; i ++)
              for (j = 0; j < n; j ++)
                {
                  up[now][i][j] = -ll_inf;
                  for (k = 0; k < n; k ++)
                    if (up[now-1][i][k] > -ll_inf && up[now-1][k][j] > -ll_inf)
                      up[now][i][j] = max(up[now][i][j], up[now-1][i][k] + up[now-1][k][j]);
                }
            for (i = 0; i < n; i ++)
              if (up[now][0][i] >= m) break;
            if (i < n) break;
          }
        for (cur[0] = 0, i = 1; i < n; i ++) cur[i] = -ll_inf;
        for (ans = 0, now --; now >= 0; now --)
          {
            for (i = 0; i < n; i ++)
              {
                tmp[i] = -ll_inf;
                for (j = 0; j < n; j ++)
                  tmp[i] = max(tmp[i], cur[j] + up[now][j][i]);
                if (tmp[i] >= m) break;
              }
            if (i >= n)
              {
                ans += 1LL << now;
                for (i = 0; i < n; i ++) cur[i] = tmp[i];
              }
          }
        printf("%I64d
", ans + 1);
      }
    
    return 0;
  }

