#include <cstdio>
#include <cstring>

#define maxn 10
#define maxm 65
#define num(i,j) ((i-1)*(n+1)+j)

int n,m,tot;
bool a[maxn][maxn],b[maxm];
int c[maxm][maxm],f[maxm];

bool add( int u, int v )
{
    if( c[u][v] == 1 )
        return 1;
    if( c[u][v] == 2 )
        return 0;
    for( int i = 1 ; i <= tot ; ++i )
        for( int j = 1 ; j <= tot ; ++j )
            if( c[i][u] == 1 && c[v][j] == 1 )
                {
                    c[i][j] = 1;
                    c[j][i] = 2;
                }
    return 1;
}

bool dfs( int i, int j, int x, int y, int z )
{
    if( j > n )
        ++i, j = 1;
    if( i > n )
        return 1;
    
    if( !a[i][j] )
        return dfs(i,j+1,x,y,z);
    
    int d[maxm][maxm],t1,t2,t3,t4;
    memcpy(d,c,sizeof d);
    t1 = num(i,j);
    t2 = num(i,j+1);
    t3 = num(i+1,j+1);
    t4 = num(i+1,j);
    
    if( x )
        {
            if( add(t1,t2) && add(t2,t3) && add(t3,t4) && dfs(i,j+1,x-1,y,z) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t2,t3) && add(t3,t4) && add(t4,t1) && dfs(i,j+1,x-1,y,z) )
                return 1;
            memcpy(c,d,sizeof c);
        
            if( add(t3,t4) && add(t4,t1) && add(t1,t2) && dfs(i,j+1,x-1,y,z) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t4,t1) && add(t1,t2) && add(t2,t3) && dfs(i,j+1,x-1,y,z) )
                return 1;
            memcpy(c,d,sizeof c);
        }
    
    if( y )
        {
            if( add(t4,t3) && add(t3,t2) && add(t2,t1) && dfs(i,j+1,x,y-1,z) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t3,t2) && add(t2,t1) && add(t1,t4) && dfs(i,j+1,x,y-1,z) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t2,t1) && add(t1,t4) && add(t4,t3) && dfs(i,j+1,x,y-1,z) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t1,t4) && add(t4,t3) && add(t3,t2) && dfs(i,j+1,x,y-1,z) )
                return 1;
            memcpy(c,d,sizeof c);
        }
    
    if( z )
        {
            if( add(t1,t2) && add(t1,t4) && add(t3,t2) && add(t3,t4) && dfs(i,j+1,x,y,z-1) )
                return 1;
            memcpy(c,d,sizeof c);
            
            if( add(t2,t1) && add(t4,t1) && add(t2,t3) && add(t4,t3) && dfs(i,j+1,x,y,z-1) )
                return 1;
            memcpy(c,d,sizeof c);
        }
    
    return 0;
}

int main()
{
    int i,j,k,t,x,y,z;
    
    scanf("%d%d",&n,&m);
    for( k = 1 ; k <= m ; ++k )
        {
            scanf("%d",&t);
            i = (t-1)/n+1, j = (t-1)%n+1;
            a[i][j] = 1;
            b[num(i,j)] = b[num(i,j+1)] = b[num(i+1,j)] = b[num(i+1,j+1)] = 1;
        }
    tot = (n+1)*(n+1);
    
    for( i = 1 ; i <= tot ; ++i )
        c[i][i] = 1;    
    x = m/3, y = (m-x)/2, z = m-x-y;
    dfs(1,1,x,y,z);
    
    t = 0;
    for( i = 1 ; i <= tot ; ++i )
        {
            for( j = 1 ; j <= tot ; ++j )
                if( !f[j] )
                    {
                        for( k = 1 ; k <= tot ; ++k )
                            if( !f[k] && c[j][k] == 2 )
                                break;
                        if( k > tot )
                            break;
                    }
            if( b[j] )
                f[j] = ++t;
            else f[j] = -1;
        }
    
    printf("%d
%d
",m%3?2:0,t);
    for( i = 1 ; i <= tot ; ++i )
        if( b[i] )
            printf("%d %d
",i,f[i]);
    
    return 0;
}

