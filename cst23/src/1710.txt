#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <list>
#include <time.h>
using namespace std;
typedef long long ll;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define FOR(i, s, t) for(i = (s); i < (t); i++)
#define RFOR(i, s, t) for(i = (s)-1; i >= (t); i--)
const int MAXN = 1000004;

int tx[MAXN], d[MAXN], tp[MAXN];
int num[MAXN];
list<int> tnum[100000];
int x[MAXN*4];
int sum[MAXN];

int n, m, L, T1, T2;
int j, k;
int prel, prer;

bool cmp(int a, int b){
  return tx[a] < tx[b];
}

int get(int i, int l, int r){
  if(l == 0)
    l++;
  if(r == 2*L)
    r--;
  if(l > r)
    return 0;
  l += x[i];
  r += x[i];
  if(l > prel){
    while(x[j] < l)
      j++;
  }
  else{
    while(x[j-1] >= l)
      j--;
  }
  prel = l;
  if(r > prer){
    while(x[k] <= r)
      k++;
  }
  else{
    while(x[k-1] > r)
      k--;
  }
  prer = r;
  return sum[k-i-1]-sum[j-i-1];
}

int main()
{
  #ifdef __FIO
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);
  #endif
  int i, j;
  int l, r;
  ll ans = 0;
  scanf("%d%d%d%d", &n, &m, &L, &T1);
  T2 = T1%(L*2);
  T1 /= L*2;
  for(i = 0; i < n; i++){
    scanf("%d%d%d", &tx[i], &d[i], &tp[i]);
    if(tx[i] == 0)
      d[i] = 1;
  }
  /*for(i = 0; i < n; i++)
    tnum[tx[i]%100000].pb(i);
  j = 0;
  for(i = 0; i < 100000; i++)
    while(!tnum[i].empty()){
      num[j++] = tnum[i].front();
      tnum[i].pop_front();
    }
  for(i = 0; i < n; i++)
    tnum[tx[num[i]]/100000].pb(num[i]);
  j = 0;
  for(i = 0; i < 100000; i++)
    while(!tnum[i].empty()){
      num[j++] = tnum[i].front();
      tnum[i].pop_front();
    }*/
  for(i = 0; i < n; i++)  
    num[i] = i;
  sort(num, num+n, cmp);
  j = 0;
  for(i = 0; i < n; i++)
    if(d[num[i]] == 1)
      x[j++] = tx[num[i]];
  for(i = n-1; i >= 0; i--)
    if(d[num[i]] == -1)
      x[j++] = L*2-tx[num[i]];
  for(i = 0; i < 3*n; i++)
    x[i+n] = x[i]+L*2;
  sum[0] = 0;
  for(i = 1; i < n; i++){
    switch(tp[num[i]]+tp[num[i-1]]){
      case 0:
        sum[i] = sum[i-1]+1;
        break;
      case 1:
        sum[i] = sum[i-1]+4;
        break;
      case 2:
        sum[i] = sum[i-1]+25;
        break;
    }
  }
  prel = prer = 0;
  ::j = ::k = 0;
  if(x[0] == 0)
    ::k++;
  //cout<<clock()<<endl;
  while(m--){
    scanf("%d%d", &l, &r);
    l *= 2;
    r *= 2;
    for(i = 0; i < n; i++)
      ans += (ll)get(i, l, r)*T1;
    for(i = 0; x[i] < L && i < n; i++){
      int l1, r1;
      l1 = max(L*2-(x[i]+T2), 0)*2;
      r1 = L*2;
      if(max(l1, l) <= min(r1, r))
        ans += get(i, max(l1, l), min(r1, r));
    }
    j = i;
    for(; i < n; i++){
      int l1, r1;
      if(x[i] + T2 >= L*2){
        l1 = 0;
        r1 = (L*2-x[i])*2;
      }
      else{
        l1 = (L*2-(x[i]+T2))*2;
        r1 = (L*2-x[i])*2;
      }
      if(max(l1, l) <= min(r1, r))
        ans += get(i, max(l1, l), min(r1, r));
    }
    for(i = j; i < n; i++){
      if(x[i]+T2 > L*3){
        int r1 = L*2;
        int l1 = (L*4-(x[i]+T2))*2;
        if(max(l1, l) <= min(r1, r))
          ans += get(i, max(l1, l), min(r1, r));
      }
    }
  }
  //cout<<clock()<<endl;
  cout<<ans<<endl;
  return 0;
}

