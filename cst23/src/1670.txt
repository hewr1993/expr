#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <memory.h>
#include <cstring>
#include <algorithm>
#include <iomanip>
#define Max(a, b)            (a > b ? a : b)
using namespace std;
const int MaxN = 110, MaxM = 1100;
int n, m, S, u[MaxM], v[MaxM];
double p, a[MaxN], f[MaxN][MaxN][MaxN], g[MaxN], Power[MaxN], Ans;
void Init()
{
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; ++i)
        scanf("%lf",&a[i]);
    scanf("%d%lf", &S, &p);
    for (int i = 1; i <= m; ++i)
        scanf("%d%d", &u[i], &v[i]);
    Power[0] = 1;
    for (int i = 1; i <= n; ++i)
        Power[i] = Power[i-1]*p;
}
int main()
{
    Init();
    for (int i = 0, j, k; i <= n; ++i)
        for (j = 1; j <= n; ++j)
            for (k = 1; k <= n; ++k)
                f[i][j][k] = -1E20;
    for (int i = 1; i <= n; ++i)
        g[i] = f[0][i][i] = a[i];
    for (int i = 1, j, k; i <= n; ++i)
        for (j = 1; j <= n; ++j)
            for (k = 1; k <= m; ++k)
                f[i][j][v[k]] = Max(f[i][j][v[k]], f[i-1][j][u[k]]+a[v[k]]*Power[i]);
    for (int i = 1, j; i <= n; ++i)
        for (j = i; j <= n; ++j)
            g[i] = Max(g[i], (f[j][i][i]-a[i]*Power[j])/(1-Power[j]));
    for (int i = 1, j; i <= n; ++i)
        for (j = 0; j <= n; ++j)
            Ans = Max(Ans, f[j][S][i]-a[i]*Power[j]+Power[j]*g[i]);
    cout << setprecision(1) << fixed << Ans << endl;
    return 0;
}

