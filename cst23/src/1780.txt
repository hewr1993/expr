#include <iostream>
#include <cstring>
using namespace std;
const int MAXM = 30000 / 9;
const int MAXL = 200;
struct bigint
{
	int val[MAXL + 1];

	void operator = (int a)
	{
		memset(val, 0, sizeof(val));
	    while (a > 0)
		{
			val[++val[0]] = a % 10;
			a /= 10;
		}
	}

	void operator += (const bigint &a)
	{
		int i, t, j = 0;
		int len = max(val[0], a.val[0]);
		for (i = 1; i <= len; i++)
		{
			t = val[i] + a.val[i] + j;
			val[i] = t % 10;
			j = t / 10;
		}
		if (j > 0)
			val[++len] = 1;
		val[0] = len;
	}
};

void print_bigint(const bigint &a)
{
	int i;
	for (i = a.val[0]; i >= 1; i--)
		cout << a.val[i];
	cout << endl;
}

bigint f[MAXM + 1];

int main()
{
	int k, w;
	int n, m;
	int i, j;
	bigint s, t, r;
	
	cin >> k >> w;
	n = w / k;
	m = (1 << k) - 1;
	r = 0;

	for (i = 1; i <= m; i++)
		f[i] = 1;
	for (i = 2; i <= n; i++)
	{
		s = 1;
		for (j = m - i + 1; j >= 1; j--)
		{
			t = f[j];
			f[j] = s;
			s += t;
			r += f[j];
		}
	}
	
	for (i = 1; i <= min(m - n, (1 << (w % k)) - 1); i++)
		for (j = i + 1; j <= m - n + 1; j++)
			r += f[j];
	
	print_bigint(r);
	return 0;
}

