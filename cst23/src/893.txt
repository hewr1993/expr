#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#define N 10000

int num[6];
int result[N];
int m = 0;
int x = 0;
void separate(int number, int num[]);
void range(int num[]);
void swap(int k, int i);
void perm(int num[], int result[], int k);
void print_result(int result[]);
int judge(int n);

int main(int argc, char *argv[])
{
	int number;
	memset(num, 0, sizeof(num));
	scanf("%d", &number);
	separate(number, num);
	range(num);
	perm(num, result, 0);
	print_result(result);
	return 0;
}

void separate(int number, int num[])	//number分别存入数组 
{
	int i;
	for (i = 0; i < 6; i++)
	{
		num[i] = number % 10;
		number = number / 10;
		if (number == 0)
			break;
	}
	m = i + 1;
}

void range(int num[])		//num[i]冒泡法排序 
{
	int i, j;
	for (i = 0; i < m; ++i)
		for (j = 0; j < m - 1 - i; ++j)
			if (num[j] > num[j + 1])
			{
				int temp = num[j];
				num[j] = num[j + 1];
				num[j + 1] = temp;
			}
}

void perm(int num[], int result[], int k)	//对num[i]排列组合,并存入result中 
{
	int i;
	if (k == m)
	{
		for (i = 0; i < m; i++)
			result[x] = result[x] * 10 + num[i];
		x++;
	}
	else
	{
		for (i = k; i < m; i++)
		{
			swap(k, i);
			perm(num, result, k + 1);
			swap(k, i);
		}
	}
}

void swap(int k, int i)
{
	int temp;
	temp = num[k];
	num[k] = num[i];
	num[i] = temp;
}

void print_result(int result[])	//对 数组result的排序和判重 
{
	int i, j, k;
	for (i = 0; i < x; ++i)
		for (j = 0; j < x - 1 - i; ++j)
			if (result[j] > result[j + 1])
			{
				int c = result[j];
				result[j] = result[j + 1];
				result[j + 1] = c;
			}
	for (i = 0; i < x; i++)
		if (i == 0 || result[i] != result[i - 1])
		{
			if (m == judge(result[i]))
				printf("%d
", result[i]);
			else if (m > judge(result[i]))
			{
				for (k = 0; k < m - judge(result[i]); k++)
					printf("0");
				printf("%d
", result[i]);
			}
		}
}

int judge(int n)		//判断数组中元素的位数 
{
	int i, j = 0;
	for (i = 1; n / i >= 1; i *= 10)
		j++;
	return j;
}

