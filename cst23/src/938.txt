#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<string>
#define fo(i,u,d) for(int i=u;i<=d;i++)
using namespace std;
int n;
double lower,upper;
int p[100010],R[100010];
int st[100010];
int t=0;
double ans;
double c[100010];

double cal(int k,int y)
{
	return (y-p[k])*1.0/R[k];
}

int find(int y)
{
	double best=1e100;
	int l=1,r=t,f;
	do
	{
		int k=(l+r)>>1;
		if (cal(st[k],y)<best)
		{
			best=cal(st[k],y);
			f=k;
		}
		if ((cal(st[k],y)<cal(st[k+1],y))|(k==t))
			r=k-1;
		else
			l=k+1;
	}while(l<=r);
	int k=f;
	fo(i,-4,5)
		if ((f+i>0)&&(f+i<=t))
		if (cal(st[f+i],y)<best)
		{
			best=cal(st[f+i],y);
			k=f+i;
		} 
	for(int i=t;(i>=1)&&(t-i<=100);i--)
	if (cal(st[i],y)<best)
	{
		best=cal(st[i],y);
		k=i;
	} 
	return st[k];
}

int main()
{
	while(scanf("%d%lf%lf",&n,&lower,&upper)!=EOF)
	{
		fo(i,1,n)
			scanf("%d",&p[i]);
		fo(i,1,n)
			scanf("%d",&R[i]);
		t=1;
		st[1]=1;
		int x;
		c[1]=0;
		ans=1;
		fo(i,2,n)
		{
			x=find(p[i]);
		//	printf("%.2lf!!!%d
",cal(x,p[i]),st[t]);
			c[i]=max(c[x],cal(x,p[i]));
		//	printf("%.2lf
",c[i]);
			if (c[i]<lower)ans+=1;else
			if (c[i]<=upper)
				ans+=(upper-c[i])/(upper-lower);
			while ((R[st[t]]<=R[i])&&(t>0))t--;
			st[++t]=i;
		}
		printf("%.2lf
",ans+1e-8);
	}
	return 0;
}
	
		

