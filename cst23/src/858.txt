#include <iostream> 
using namespace std; 
class Base1
{
public:
// 请补充完整
	Base1(int i)
	{
		cout<<"Base1 constructor called "<<i<<endl;
	}
	Base1(){}
	~Base1()
	{
		cout<<"Base1 destructor called"<<endl;
	}
};
class Base2
{
public:
// 请补充完整
	Base2(int i)
	{
		cout<<"Base2 constructor called "<<i<<endl;
	}
	Base2(){}
	~Base2()
	{
		cout<<"Base2 destructor called"<<endl;
	}
};
class Base3
{
public:
// 请补充完整
	Base3(int i)
	{
		cout<<"Base3 constructor called "<<i<<endl;
	}
	Base3(){}
	~Base3()
	{
		cout<<"Base3 destructor called"<<endl;
	}
};
class Derived:public Base2,public Base1,public Base3
{
	Base3 member3;	Base1 member1;	Base2 member2;
public:
// 请补充完整
	Derived(int i1,int i2,int i3,int i4,int i5,int i6,int i7):Base2(i3),Base1(i2),Base3(i4),member3(i7),member1(i5),member2(i6)
	{
		cout<<"Derived constructor called "<<i1<<endl;
	}
	Derived(){}
	~Derived()
	{
		cout<<"Derived destructor called"<<endl;
	}
};
int main()
{
	Derived objD(1,2,3,4,5,6,7);	
	return 0;
} 

