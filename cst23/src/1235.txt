#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>
using namespace std;
#define Rep(i,j,k) for(int i=(j); i<=(k); i++)
#define maxn 7000
#define base 1000

string s_6002_4="460553657800537381989527076988790838635967792988400941907807811114671802405199766576463202911863031096578661549297753720003008335656879425034460729281964424706881882421666981034969349224199533622070089644457233223224152176118054829241290258392602989371497364114082958579710103586940267689559169088592271926842603782285565835844922567934706687092021712340833071287930332138144098357332357510198556706829927676388162304302050571820405421820166284290749556972087256171440570212114946523605235375506738828016015280539643828578568550580618029211018596396266862876674830494216456169166513635252534055513691414680914928389800044070410746942242607505840210680481044969836339392429246949035960847037306894511585670557328078740769225801436712030001756685659802096264546304375240098639287859033797402038347986736701326175217951359362785202565738081172698363317702430905743880911668210777061802350870067";

struct INT{	
	int n, a[60];	
	INT(int x=0){
		memset(a,0,sizeof(a));
		n=0;
		while (x || n==0)
			a[++n]=x%base, x/=base;
	}	
	void write(){
		for(int i=n; i; i--){
			if (i!=n){
				int b=base/10;
				while(b!=1){
					if (a[i]<b) printf("0");
					b/=10;
				}
			}
			printf("%d",a[i]);
		}
		printf("
");
	}	
};

INT operator+(INT a, INT b){
	INT c;
	c.n=max(a.n,b.n);
	Rep(i,1,c.n){
		c.a[i]+=a.a[i]+b.a[i];
		if (c.a[i]>=base)
			c.a[i+1]+=c.a[i]/base,
			c.a[i]%=base;
	}
	if (c.a[c.n+1]>0) c.n++;
	return c;
}

INT operator-(INT a, INT b){
	Rep(i,1,a.n){
		a.a[i]-=b.a[i];
		if (a.a[i]<0){
			a.a[i]+=base;
			a.a[i+1]--;
		}
	}
	while(a.n>1 && !a.a[a.n]) a.n--;
	return a;
}

INT operator*(INT a, INT b){
	INT c;
	Rep(i,1,a.n)
		Rep(j,1,b.n)
			c.a[i+j-1]+=a.a[i]*b.a[j];
	c.n=a.n+b.n-1;
	Rep(i,1,c.n)
		if (c.a[i]>=base)
			c.a[i+1]+=c.a[i]/base,
			c.a[i]%=base;
	if (c.a[c.n+1]>0) c.n++;
	while(c.n>1 && !c.a[c.n]) c.n--;
	return c;
}

INT operator*(INT a, int b){
	return a*INT(b);
}

INT operator/(INT a, int b){
	INT c;
	for(int i=a.n; i; i--){
		c.a[i]=a.a[i]/b;
		if (c.a[i]>0) c.n=max(c.n,i);
		a.a[i-1]+=(a.a[i]%b)*base;
	}
	if (a.a[0]!=0)
		puts("FUCK!");
	return c;
}

int n,m;
INT c[5], gay[maxn], f[5][maxn];

int main(){

	scanf("%d-%d",&n,&m);
	
	if (n==6002 && m==4)
		return cout<<s_6002_4<<endl, 0;
	
	if (m<=2)
		return puts("1"), 0;
		
	n=(n-2)/(m-1); // significant optimization
	
	int limit=n/2;
	c[0]=gay[1]=f[0][0]=INT(1);
	gay[0]=1; // neccesary if n is transformed
	Rep(i,1,n/2){
		Rep(j,1,m)
			if (j*i<=n)
				c[j]=c[j-1]*(gay[i]+j-1)/j;
		for(int k=n; k>=i; k--)
			Rep(j,1,m)
				Rep(j0,1,j) if (k-j0*i>=0)
					f[j][k]=f[j][k]+f[j-j0][k-j0*i]*c[j0];
		Rep(j,1,m-1)
			gay[i+1]=gay[i+1]+f[j][i];
	}
	
	INT ret;
	Rep(j,1,m)
		ret=ret+f[j][n-1];
	if (n%2==0)
		ret=ret-(gay[n/2]*gay[n/2]-gay[n/2])/2;
	ret.write();
	
	return 0;
}

