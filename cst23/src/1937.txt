#include <cstdio>
#include <iostream>
using namespace std;
typedef long long lll;
const int maxn = 400000;
const lll lim = 1LL << 50;
int g[maxn], st[maxn], top, t, n, k, a[maxn], x[maxn], b[maxn], beg;
lll B, C, l, r, f[maxn], y[maxn];
lll sqr(int x) {return 1LL * x * x;}
void updata(int xx, lll mm)
{
    for (; beg < top && y[st[beg + 1]] - y[st[beg]] <= 2LL * (x[st[beg + 1]] - x[st[beg]]) * a[xx]; ++beg);
    if  (beg > 1 && y[st[beg]] - y[st[beg - 1]] == 2LL * (x[st[beg]] - x[st[beg - 1]]) * a[xx])
	g[xx] = b[beg - 1] + 1;
    else g[xx] = n * 10;
    f[xx] = y[st[beg]] - 2LL * a[xx] * x[st[beg]] + sqr(a[xx]) + mm, g[xx] = min(g[xx], g[st[beg]] + 1);
}

lll cj(int a1, int a2, int a3)
{
    double mid = 1.0 * (x[a2] - x[a1]) * (y[a3] - y[a2]) - 1.0 * (x[a3] - x[a2]) * (y[a2] - y[a1]);
    if (mid > 1e-8) return 1;
    if (mid < -1e-8) return -1;
    return 0;
}

void add(int num, lll x1, lll y1)
{
    b[top] = g[num];
    x[num] = x1, y[num] = y1;
    for (; top > beg && cj(st[top - 1], st[top], num) < 0; --top)
	if (cj(st[top - 1], st[top], num) == 0) b[top] = min(b[top], g[st[top]]), --top;
    b[top] = min(b[top], g[st[top]]);
    st[++top] = num;
}

void check(lll x)
{
    beg = 1;
    top = 0;
    add(0, 0, 0);
    f[1] = sqr(a[1]) + x; 
    add(1, a[1], f[1] + sqr(a[1]));
    g[1] = 1;
    for (int i = 2; i <= n; ++i)
    {
	updata(i, x);
	add(i, a[i], f[i] + sqr(a[i]));
    }
}

int main()
{
    for (scanf("%d", &t); t; --t)
    {
	lll mid;
	scanf("%d%d%I64d%I64d", &n, &k, &B, &C);
	for (int i = 1; i <= n; a[i] += a[i - 1], ++i)
	    scanf("%d", &a[i]);
	for (l = 0, r = lim; l < r; )
	{
	    check(mid = l + r >> 1);
	    if (g[n] >= k) l = mid + 1;
	    else r = mid;
	}
	check(l);
	lll ans = l * k - f[n] + B * a[n] + C * k;
	printf("%I64d
", ans);
    }
    return 0;
}

