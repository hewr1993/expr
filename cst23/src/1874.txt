#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;
int i,N,Num,Last,p[30];
double Ans;
struct node
{
	int x,y;
}a[20];
bool cmp(const node i,const node j)
{
	if(i.x==j.x) return i.y<j.y;
	return i.x<j.x;
}
int Xot(int x1,int y1,int x2,int y2)
{
	return x1*y2-x2*y1;
}
bool check(int i,int j,int k)
{
	int t;
	t=Xot(a[k].x-a[i].x,a[k].y-a[i].y,a[k].x-a[j].x,a[k].y-a[j].y);
	return t<0;
}
double dis(int i,int j)
{
	return sqrt(fabs((a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y)));
}
int main()
{
	scanf("%d",&N);
	for(i=1;i<=N;++i) scanf("%d%d",&a[i].x,&a[i].y);
	sort(a+1,a+N+1,cmp);
	p[1]=1,p[2]=2,Num=2;
	for(i=3;i<=N;++i)
	{
		for(;Num>1&&!check(p[Num-1],p[Num],i);--Num);
		p[++Num]=i;
	}
	Last=Num;
	for(i=N-1;i;--i)
	{
		for(;Num>Last&&!check(p[Num-1],p[Num],i);--Num);
		p[++Num]=i;
	}
	for(i=1;i<Num;++i) printf("%d %d
",a[p[i]].x,a[p[i]].y);
	Ans=0;
	for(i=1;i<Num;++i) Ans+=dis(p[i],p[i+1]);
	printf("LENGTH = %.2lf
",Ans);
	return 0;
}

