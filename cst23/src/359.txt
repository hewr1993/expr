#include<stdio.h>
#include<stdlib.h>
#include<cstring>
#include<limits.h>
const int N = 1010;
int s, t, maxflow, b[N], dis[N],
w[N][N], f[N][N], c[N][N];
bool p[N];
int min(int a, int b)
{
    return(a < b ? a : b);
}
bool bfs()
{
     int i, u, v, head = 1, tail = 1;
     memset(p, false, sizeof(p));
     b[1] = t;
     p[t] = true;
     dis[t] = 1;
     dis[s] = 0;
     while (head <= tail)
     {
           v = b[head];
           for (i = 1; i <= w[v][0]; i++)
           {
               u = w[v][i];
               if (! p[u])
               if (f[u][v] < c[u][v] || f[v][u] > 0)
               {
                    p[u] = true;
                    dis[u] = dis[v] + 1;
                    b[++tail] = u;
               }
           }
           ++head;
     }
     if (dis[s] == 0) return(false);
     else return(true);
} 

int dfs(int u, int limit)
{
    if (u == t)
    return(limit);
    int v, i, temp, sum = 0;
    for (i = 1; i <= w[u][0]; i++)
    {
        v = w[u][i];
        if (dis[u] == dis[v] + 1)
        {
             if (f[u][v] < c[u][v])
             {
                  temp = dfs(v, min(limit, c[u][v] - f[u][v]));
                  limit -= temp;
                  sum += temp;
                  f[u][v] += temp;       
             }
             else if (f[v][u] > 0)
             {
                  temp = dfs(v, min(limit, f[v][u]));
                  limit -= temp;
                  sum += temp;
                  f[v][u] -= temp;
             }      
        }
        if (limit == 0) break;
    }
    return(sum);
}

int main()
{
    int n, i, j, a[N], sum[N], ans = 0, temp;
    scanf("%d", &n);
    s = n + 1;
    t = s + 1;
    for (i = 1; i <= n; i++)
    scanf("%d", &a[i]);
    memset(sum, 0, sizeof(sum));
    memset(w, 0, sizeof(w));
    memset(c, 0, sizeof(c));
    memset(f, 0, sizeof(f));
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n; j++)
        {
            scanf("%d", &temp);
            if (temp != 0)
            {
                     w[i][0]++;
                     w[i][w[i][0]] = j;
                     c[i][j] = 2 * temp;
                     sum[i] += temp;
                     ans += temp;
            }
        }
    }
    for (int i = 1; i <= n; i++)
    {
        w[s][++w[s][0]] = i;
        w[i][++w[i][0]] = s;
        c[s][i] = sum[i];
        w[t][++w[t][0]] = i;
        w[i][++w[i][0]] = t;
        c[i][t] = a[i];
    }
    maxflow = 0;
    while (bfs()) maxflow += dfs(s, INT_MAX);
    printf("%d", ans - maxflow);
    return(0);   
}
           

