#include <fstream>
#include <cmath>
#include <iostream>
using namespace std;

int main()
{
    int best,jr;
    int maxp,max=-32767,fin=-32767;
    int i,n,k=0;
    int price[20],quan[20],b=0;
    int p[8005];
    memset(price,0,sizeof(price));
    memset(quan,0,sizeof(quan));
    memset(p,0,sizeof(p));
    
    cin>>best;
    i=0;
    cin>>price[i]>>quan[i];i++;
    best-=price[i-1];
    while(1)
    {
        cin>>price[i]>>quan[i];
        if(price[i]==-1) break;else price[i]-=price[0];
        i++;
    }
    cin>>jr;
    n=i-1;i=0;
    price[0]=0;
    maxp=price[n]+quan[n]/jr;
    
    while(i<=maxp)
    {
         if(k<=n)
         {
           if(i>price[k]) k++;
           else 
           {
               if(i==price[k]) p[i]=quan[k];
               else p[i]=(quan[k-1]-(quan[k-1]-quan[k])/(price[k]-price[k-1])*(i-price[k-1]));
               i++;
           }
         }
         else {p[i]=p[i-1]-jr;i++;}
    }
    
    i=0;
    for(int x=(-1)*best;x<=100;x++)
    {
        int temp=0;
        for(i=0;i<=maxp;i++)
        { 
            temp=(i+x)*p[i];
            if(temp>max) {max=temp;b=i;}
            if(temp==max&&i==best) {max=temp;b=i;}
        }
        if(b==best&&abs(x)<abs(fin)) fin=x;
    }
    cout<<fin;
    return 0;
}

