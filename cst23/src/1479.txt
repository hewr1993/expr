#include <iostream>
#include <cstring>
using namespace std;
const int MOD = 10007;
const int MAXL = 100000;
char s[MAXL + 1];

int s1[MAXL + 2][2], p1;
int s2[MAXL + 1], p2;

void calc_or(int r[], int a[], int b[])
{
	int r0, r1;
	r0 = a[0] * b[0];
	r1 = a[1] * b[0] + a[0] * b[1] + a[1] * b[1];
	r[0] = r0 % MOD;
	r[1] = r1 % MOD;
}
void calc_and(int r[], int a[], int b[])
{
	int r0, r1;
	r0 = a[0] * b[0] + a[0] * b[1] + a[1] * b[0];
	r1 = a[1] * b[1];
	r[0] = r0 % MOD;
	r[1] = r1 % MOD;
}

int main()
{
	int l, i, v, p;
	cin >> l;
	cin >> s;

	v = p = 0;
	for (i = 0; i < l; i++)
		switch (s[i])
		{
			case '+':
			case '*':
				if (i == 0 || s[i - 1] != ')')
				{
					p1++;
					s1[p1][0] = s1[p1][1] = 1;
				}

				v = p + (s[i] == '*');
				while (v < s2[p2])
				{
					if (s2[p2] & 1)
						calc_and(s1[p1 - 1], s1[p1], s1[p1 - 1]);
					else
						calc_or(s1[p1 - 1], s1[p1], s1[p1 - 1]);
					p1--;
					p2--;
				}
				s2[++p2] = v;
				break;
			case '(':
				p += 2;
				break;
			case ')':
				if (s[i - 1] != ')')
				{
					p1++;
					s1[p1][0] = s1[p1][1] = 1;
				}

				p -= 2;
		}
	
	if (s[l - 1] != ')')
	{
		p1++;
		s1[p1][0] = s1[p1][1] = 1;
	}

	while (p2 > 0)
	{
		if (s2[p2] & 1)
			calc_and(s1[p1 - 1], s1[p1], s1[p1 - 1]);
		else
			calc_or(s1[p1 - 1], s1[p1], s1[p1 - 1]);
		p1--;
		p2--;
	}
		
	cout << s1[1][0] << endl;
	return 0;
}

