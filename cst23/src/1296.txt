#include<iostream>
using namespace std;

char s[] = "DLRU";
char maze[500][500];
int d[4][2] = {{1, 0}, {0, -1}, {0, 1}, {-1, 0}};
struct 
{
	int x, y, pre, step, way;
} queue[10000];

void print(int t)
{
	if(t == 1) return;
	print(queue[t].pre);
	cout << s[queue[t].way];
}
int main()
{
	int n, m, head = 0, tail = 1, nx, ny, ans, ok = 0;
	cin >> n >> m;
	for(int i = 0;i < n;i++)
		cin >> maze[i];
	queue[tail].pre = queue[tail].x = queue[tail].y = queue[tail].step = 0;
	maze[0][0] = '1';
	while(head < tail)
	{
		head++;int i;
		for(i = 0;i < 4;i++)
		{
			nx = queue[head].x + d[i][0];
			ny = queue[head].y + d[i][1];
			if((nx >= 0) && (nx < n) && (ny >= 0) && (ny < m) && (maze[nx][ny] == '0'))
			{
				queue[++tail].pre = head;queue[tail].x = nx;queue[tail].y = ny;queue[tail].step = queue[head].step + 1;queue[tail].way = i;
				//printf("%d %d %d %d %d
", tail, nx, ny, queue[tail].way, i);
				maze[nx][ny] = '1';
				if((nx == (n - 1)) && (ny == (m - 1))) {cout << queue[tail].step << endl;ok = 1;ans = tail;break;}
			}
		}
		if(ok) 
			break;
	}
	if(ok)
		print(ans);
	//system("pause");
	return 0;
}

