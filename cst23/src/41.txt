#include <iostream>
#include <climits>
#include <vector>
//#include "zbydebug"
using namespace std;

const int MAXN = 1000;
int a[MAXN + 1], b[MAXN + 2];
int s1[MAXN + 1], p1;
int s2[MAXN + 1], p2;

int f[MAXN + 1];
vector<int> g[MAXN + 1];

bool dfs(int p, int q)
{
	if (f[p] > 0)
	{
		if (f[p] != q)
			return false;
		return true;
	}
	f[p] = q;
	for (int i = 0; i < g[p].size(); i++)
		if (!dfs(g[p][i], 3 - q))
			return false;
	return true;
}
int main()
{
	int n, i, j, w;
	cin >> n;
	for (i = 1; i <= n; i++)
		cin >> a[i];
	
	b[n + 1] = INT_MAX;
	for (i = n; i >= 1; i--)
		b[i] = min(a[i], b[i + 1]);

	for (i = 1; i < n; i++)
		for (j = i + 1; j <= n; j++)
			if (b[j + 1] < a[i] && a[i] < a[j])
			{
				g[i].push_back(j);
				g[j].push_back(i);
			}
				
	for (i = 1; i <= n; i++)
		if (f[i] == 0 && !dfs(i, 1))
			break;
	
	if (i <= n)
		cout << 0 << endl;
	else
	{
		s1[p1] = s2[p2] = INT_MAX;
		for (i = 0, j = 1, w = 1; i < 2 * n; i++)
			if (a[j] < s1[p1] && f[j] == 1)
			{
				s1[++p1] = a[j++];
				cout << "a ";
			}
			else if (s1[p1] == w)
			{
				p1--;
				w++;
				cout << "b ";
			}
			else if (a[j] < s2[p2] && f[j] == 2)
			{
				s2[++p2] = a[j++];
				cout << "c ";
			}
			else if (s2[p2] == w)
			{
				p2--;
				w++;
				cout << "d ";
			}
		cout << endl;
	}
	return 0;
}

