#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;

double SolveRoot(double (*pf)(double t), double a, double b, int n)
{
	static double ar[10];
	static double br[10];
	ar[0] = a;
	br[0] = b;
	double temp = (ar[n - 1] + br[n - 1])/2;
	if( pf(ar[n-1]) * pf(temp) > 0)
	{
		ar[n] = temp;
		br[n] = br[n-1];
		return ar[n];
	}
	else
	{
		br[n] = temp;
		ar[n] = ar[n-1];
		return br[n];
	}
}

double f(double x)
{
	return x*x - 2;
}

int main()
{
	cout << setprecision(10);
	for (int n=1; n<10; n+=1)
		cout << "SolveRoot(f,1,2," << n << ") = " <<setprecision(10)<< SolveRoot(f,1,2,n) << endl;
	cout << "The exact SolveRoot = " <<setprecision(10)<<sqrt((double)2) << endl;
	return 0;
}
