#include<iostream>
#include<cstring>
using namespace std;
int n,m,k,i,j;
int t,l,r;
int custom[1003],len[1003],tim[1003];
int people[10003][3];
int delta[1003];
int sum[1003];
int ans;
int fine,finepos,finevalue;
int devalue;

int max(int a,int b)
{return (a>b)?a:b ;}

int min(int a,int b)
{return (a<b)?a:b ;}

int main()
{
	memset(sum,0,sizeof(sum));
    cin >>n>>m>>k;
    for (i=1;i<=n-1;i++) cin>>len[i];
    for (i=1;i<=m;i++)
    {cin >>t>>l>>r;
	 people[i][0]=t;
	 people[i][1]=l;
	 people[i][2]=r;
     custom[l]=max(custom[l],t);
     sum[r]++;
    }
    for (i=1;i<=n+1;i++) sum[i]=sum[i-1]+sum[i];
    for (i=1;i<=n;i++)
    {tim[i]=tim[i-1]+len[i-1];
     tim[i]=max(tim[i],custom[i]);
    }
    for (i=1;i<=n;i++) delta[i]=tim[i]-custom[i];
    ans=0;
    for (i=1;i<=m;i++) ans=ans+tim[people[i][2]-1]+len[people[i][2]-1]-people[i][0];
    len[0]=1<<31-1;
    for (i=1;i<=n;i++)
    {
	 if (!k) break;
	 fine=0;
	 r=0;
	 devalue=1<<31-1;
	 for (j=n;j>=0;j--)
	 {
	  if (!delta[j])
		{
		 devalue=1<<31-1;
		 r=0;
		 continue;
		};
	  if (!r) r=j;
	  devalue=min(devalue,delta[j]);
	  if (len[j-1])
	  if (fine<(sum[r+1]-sum[j-1]))
	  {
	   fine=sum[r+1]-sum[j-1];
	   finepos=j;
	   finevalue=min(devalue,len[j-1]);
       }
	 }
	 if (fine)
	 {
	  ans=ans-min(finevalue,k)*fine;
	  len[finepos-1]-=min(finevalue,k);
	  k=k-min(finevalue,k);
	  for (j=finepos;j<=n;j++)
	  {
		if (!delta[j]) break;
		delta[j]=delta[j]-finevalue;
	  }
	 }
		else break;
	}
    cout <<ans<<endl;
}

