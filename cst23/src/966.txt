/*NOIP 2000-2*/
#include <stdio.h>


//可以认为，收的税不会超过最高单品利润。补贴不会超过单品成本
//用穷举法 
int main()
{
    int wantp; //政府希望的价 
    int jn[10000][3]={0};   //价格、对应的销量、利润 
    int cb;  //成本 
    int ss;  //税收
    int jie; //超过最高价后，量的台阶 
    int max; 
    int tj,tq,t;
    int i,j;
    scanf("%d",&wantp);
    scanf("%d %d",&jn[0][0],&jn[0][1]); //成本和对应的销量 
    jn[0][2]=0;
    cb=jn[0][0];
    i=0;
    while(1)
    {
        scanf("%d %d",&tj,&tq);
        if(tj==-1 || tq==0) break;  
        t=(tq-jn[i][1])/(tj-jn[i][0]);  //单位价格差对应的销量差 
        for(j=jn[i][0]+1;j<=tj;j++)
        {
            i++;
            jn[i][0]=j;
            jn[i][1]=jn[i-1][1]+t;
            jn[i][2]=(jn[i][0]-cb)*jn[i][1];
        }
    }
    scanf("%d",&jie);
    while((jn[i][1]-jie)>0)
    {
        i++;
        
        jn[i][0]=jn[i-1][0]+1;
        jn[i][1]=jn[i-1][1]-jie;
        jn[i][2]=jn[i][1]*(jn[i][0]-cb);
        //cout<<"kkk "<<i<<jn[i][0]<<" "<<jn[i][1]<<endl;
    }
    
    
    int maxPrice=jn[i][0];
    int itemNum=i;
    
    //for(j=0;j<=itemNum;j++) cout<<jn[j][0]<<" "<<jn[j][1]<<endl;
    //找最大利润所对应的价格
    for(i=0;i<=cb;i++) //循环所有可能税收 
    {
        max=-9999999;  //利润最大
        int maxP=0; //利润最大的价格 
        for(j=0;j<=itemNum;j++)   //找最大利润所在价格 
        {
            int lr=(jn[j][0]-cb+i)*jn[j][1];
            //cout<<j<<" "<<jn[j][0]<<" "<<jn[j][1]<<" "<<i<<" "<<lr<<endl;
            if (max<=lr) 
            {
                max=lr;
                maxP=jn[j][0];
            }
        }
        if(maxP==wantp) break;
    }
    if(i<=cb)    
    {
        printf("%d
",i);
        return 0;
    }
        
    for(i=0;i>-1*(maxPrice-cb);i--) //循环所有可能税收 
    {
        max=-9999999;  //利润最大
        int maxP=0; //利润最大的价格 
        for(j=0;j<=itemNum;j++)   //找最大利润所在价格 
        {
            int lr=(jn[j][0]-cb+i)*jn[j][1];
            //cout<<j<<" "<<jn[j][0]<<" "<<jn[j][1]<<" "<<i<<" "<<lr<<endl;
            if (max<=lr) 
            {
                max=lr;
                maxP=jn[j][0];
            }
        }
        if(maxP==wantp) break;
    }
    
    if(i>-1*(maxPrice-cb))    {printf("%d
",i);}
    else printf("NO SOLUTION
");
    return 0;
}

