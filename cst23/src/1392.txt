#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<string>

using namespace std;

struct A{
	string name;
	int score[100];
};

A s[100]={};
char s1[100]={};
int pos;

int comp1(const void *pa,const void *pb)
{
    A* a=(A*)pa;
    A* b=(A*)pb;
    int x=(*a).score[pos];
    int y=(*b).score[pos];
    return y-x;
}

int comp2(const void *pa,const void *pb)
{
	A* a=(A*)pa;
	A* b=(A*)pb;
	int x=(*a).score[0];
	int y=(*b).score[0];
	if(x>y) return 1;
	if(x<y) return -1;
	x=(*a).score[1];
	y=(*b).score[1];
	if(x>y) return -1;
	if(x<y) return 1;
	string sx=(*a).name;
	string sy=(*b).name;
	if(sx>sy) return 1;
	if(sx<sy) return -1;
	return 0;
}

int main()
{
    int n=0,m=0;
	while(scanf("%s",&s1)>0)
    {
		s[n].name=s1;
		m=0;
		float x;
		int t=0;
		while(scanf("%f",&x)>0)
		{
			s[n].score[m+2]=int(x*10+0.5);
			t+=s[n].score[m+2];
			m++;
		}
		s[n].score[1]=t;
		s[n].score[0]=0;
		n++;
	}
	for(int i=0;i<m;i++)
	{
		pos=i+2;
		qsort(s,n,sizeof(A),comp1);
		int pai=1;
		for(int j=0;j<n;j++)
		{
			if(j>=0&&s[j].score[pos]==s[j-1].score[pos]);
			else
				pai=j+1;
			s[j].score[0]+=pai;
		}
	}
	qsort(s,n,sizeof(A),comp2);
	for(int i=0;i<n;i++)
		printf("%s %d %.1f
",s[i].name.c_str(),s[i].score[0],s[i].score[1]/10.0);
	system("pause");
    return 0;
}

