#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;

const int MAX=300000+100;

int t[MAX*2],begin[MAX],next[MAX*2],tot;
int n;
int fa[MAX];

void add(int x,int y)
{
    t[++tot]=y;next[tot]=begin[x];
    begin[x]=tot;
}

int max(int a,int b,int c)
{
    return max(a,max(b,c));
}

int q[MAX],first,last;
int hash[MAX],cut[MAX],dist[MAX];
int BFS(int s)
{
    first=last=0;
    q[last++]=s;
    dist[s]=hash[s]=1;
    fa[s]=0;
    int i,u,v;
    int far=0;
    while(first<last)
    {
        u=q[first++];
        for(i=begin[u];i;i=next[i])
        {
            v=t[i];
            if(!hash[v] && !cut[v])
            {
                hash[v]=1;
                dist[v]=dist[u]+1;
                fa[v]=u;
                q[last++]=v;
                if(dist[v]>dist[far])far=v;
            }
        }
    }
    return far;
}

int st[MAX],top;
int far[MAX],a[MAX];

int f1[MAX],s1[MAX],t1[MAX];
int f2[MAX],s2[MAX],t2[MAX];

int cc(int i)
{
    return (i%2==0)?i/2:(i/2+1);
}

int tt[MAX],p;

int getmid(int u,int v)
{
    if(!u)return v;
    if(!v)return u;
    memset(hash,0,sizeof hash);
    memset(fa,0,sizeof fa);
    memset(cut,0,sizeof cut);
    BFS(u);
    int now=v;
    p=0;
    while(now!=u)
    {
        tt[++p]=now;
        now=fa[now];
    }
    tt[++p]=u;
    return tt[cc(p)];
}

int main(){
    int i,x,y;
    scanf("%d",&n);
    for(i=1;i<n;++i)
    {
        scanf("%d %d",&x,&y);
        add(x,y);add(y,x);
    }
    int s=BFS(1);
    memset(dist,0,sizeof dist);
    memset(hash,0,sizeof hash);
    memset(fa,0,sizeof fa);
    int t=BFS(s);
    int answer=dist[t];
    int u=t;
    top=0;
    while(u!=s)
    {
        st[++top]=u;
        cut[u]=1;
        u=fa[u];
    }
    st[++top]=s;
    cut[s]=1;
    int pre,suf;
    memset(dist,0,sizeof dist);
    memset(hash,0,sizeof hash);
    memset(fa,0,sizeof fa);
    for(i=1;i<=top;++i)
    {
        u=st[i];
        t=BFS(u);
        far[u]=dist[t];
        a[u]=t;
    }
    int mx=0,now=st[1];
    for(i=1;i<=top;++i)
    {
        u=st[i];pre=st[i-1];
        if(far[u])
        {
            f1[u]=far[u]-1+mx;
            s1[u]=now;t1[u]=a[u];
            if(far[u]>mx)
            {
                now=a[u];
                mx=far[u]-1;
            }
        }else
        {
            f1[u]=mx;
            s1[u]=now;t1[u]=u;
        }
        ++mx;
        if(f1[pre]>f1[u])
        {
            s1[u]=s1[pre];t1[u]=t1[pre];
            f1[u]=f1[pre];
        }
    }
    mx=0,now=st[top];
    for(i=top;i>=1;--i)
    {
        u=st[i];suf=st[i+1];
        if(far[u])
        {
            f2[u]=far[u]-1+mx;
            s2[u]=now;t2[u]=a[u];
            if(far[u]>mx)
            {
                now=a[u];
                mx=far[u]-1;
            }
        }else
        {
            f2[u]=mx;
            s2[u]=now;t2[u]=u;
        }
        ++mx;
        if(f2[suf]>f2[u])
        {
            s1[u]=s1[suf];t1[u]=t1[suf];
            f2[u]=f2[suf];
        }
    }
    int ans=0;
    for(i=1;i<=top;++i)
    {
        u=st[i];suf=st[i+1];
        int t1=f1[u],t2=f2[suf];
        if(max(t1,t2,cc(t2)+cc(t1)+1)<answer)
        {
            answer=max(t1,t2,cc(t2)+cc(t1)+1);
            ans=i;
        }
    }
    u=st[ans];suf=st[ans+1];
    printf("%d
",answer);
    printf("%d %d
",u,suf);
    printf("%d %d
",getmid(s1[u],t1[u]),getmid(s2[suf],t2[suf]));
}

